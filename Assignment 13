problem 1


import java.util.*;

public class Main{
    
    public static String removeAdj(String s) {
        
        if (s.length() <= 1) return s;

        Stack<Character> st = new Stack<>();

        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            if(!st.isEmpty() && ch== st.peek()) st.pop();
            else{
                st.push(ch);
            }
        }
        StringBuilder res= new StringBuilder();
        for(char c:st){
            res.append(c);
        }
        return res.toString();
    }

    public static void main(String[] args) {
        Scanner sc= new Scanner(System.in);
        String s= sc.nextLine();
        System.out.print(removeAdj(s));
    }
}


problem 2


import java.util.Stack;

public class Main {

    public static int[] calculateSpan(int[] price) {
        
        int n = price.length;
        int[] span = new int[n];
        Stack<Integer> stack = new Stack<>(); 
        for (int i = 0; i < n; i++) {

            while (!stack.isEmpty() && price[stack.peek()] <= price[i]) {
                stack.pop();
            }
            span[i] = (stack.isEmpty()) ? (i + 1) : (i - stack.peek());
            stack.push(i);
        }

        return span;
    }


    public static void main(String[] args) {
        int[] price = {100, 80, 60, 70, 60, 75, 85};
        int[] span = calculateSpan(price);

        System.out.print("[ ");
        for (int s : span) {
            System.out.print(s + " ");
        }
        System.out.print("]");
    }
}

problem 3


import java.util.*;

public class Main{
    public static boolean isValid(String s) {

        if (s.length() <= 1) return false;

        Stack<Character> st = new Stack<>();

        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);

      
            if (ch == '(' || ch == '{' || ch == '[') {
                st.push(ch);
            } else {
                
                if (st.isEmpty()) return false;

                char top = st.peek();
                st.pop();

                // Check for mismatched brackets
                if ((ch == ')' && top != '(') ||
                    (ch == '}' && top != '{') ||
                    (ch == ']' && top != '[')) {
                    return false;
                }
            }
        }

        return st.isEmpty();
    }


    public static void main(String[] args) {
        Scanner sc= new Scanner(System.in);
        String s= sc.nextLine();
        if(isValid(s)){
            System.out.print("Balanced");
        }
        else{
            System.out.print("Not Balanced");
        }
    }
}



